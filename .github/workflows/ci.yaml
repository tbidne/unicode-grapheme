name: ci

on:
  push:
    branches:
      - main
      - gen-perf

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  cabal:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "9.2.8"
          - "9.4.8"
          - "9.6.6"
          - "9.8.4"
          - "9.10.2"
          - "9.12.2"
        os:
          - "macos-latest"
          - "ubuntu-latest"
          - "windows-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure
        run: cabal configure --enable-tests --ghc-options -Werror

      # For some reason, the generator is failing to build on Windows +
      # GHC 9.2.8:
      #
      #     realgcc.exe: error: D:\\a\\unicode-grapheme\\unicode-grapheme\\dist-newstyle\\build\\x86_64-windows\\ghc-9.2.8\\unicode-grapheme-generator-0.1\\x\\unicode-grapheme-generator\\opt\\build\\unicode-grapheme-generator\\unicode-grapheme-generator-tmp\Unicode\Grapheme\DB\Generator\V16_0.o: No such file or directory
      #     `gcc.exe' failed in phase `Linker'. (Exit code: 1)
      #     Error: [Cabal-7125]
      #     Failed to build exe:unicode-grapheme-generator from unicode-grapheme-generator-0.1.
      #
      # We get this error for all of its modules.

      - name: Build generator
        if: ${{ matrix.os != 'windows-latest' || matrix.ghc != '9.2.8' }}
        run: cabal build unicode-grapheme-generator

      - name: Run generator
        if: ${{ matrix.os != 'windows-latest' || matrix.os != '9.2.8' }}
        run: |
          cabal run unicode-grapheme-generator
          git diff --exit-code --color=always

      - name: Benchmark generator
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: bench-generator
        run: |
          cabal bench unicode-grapheme-generator:bench:benchmarks --benchmark-options '
            +RTS -T -RTS
            -t100
            --csv benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            --svg benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
            --baseline benchmarks/baseline_${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            --fail-if-slower 30
            --fail-if-faster 30'

      - uses: actions/upload-artifact@v4
        name: Bench generator upload
        if: ${{ failure() && steps.bench-generator.conclusion == 'failure' }}
        with:
          name: bench_generator_artifacts_${{ matrix.os }}_${{ matrix.ghc }}
          path: |
            lib/unicode-grapheme-generator/benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            lib/unicode-grapheme-generator/benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
          retention-days: 1

      - name: Compile
        run: cabal build unicode-grapheme

      - name: Unit Test
        run: cabal test unit

      - name: Benchmark breaker
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: bench-breaker
        run: |
          cabal bench unicode-grapheme:bench:benchmarks --benchmark-options '
            +RTS -T -RTS
            -t100
            --csv benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            --svg benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
            --baseline benchmarks/baseline_${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            --fail-if-slower 20
            --fail-if-faster 20'

      - uses: actions/upload-artifact@v4
        name: Bench breaker upload
        if: ${{ failure() && steps.bench-breaker.conclusion == 'failure' }}
        with:
          name: bench_breaker_artifacts_${{ matrix.os }}_${{ matrix.ghc }}
          path: |
            benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            benchmarks/${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
          retention-days: 1
  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
        - "macos-latest"
        - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Compile & Test
        run: nix build
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Formatting
        run: |
          nix run .#format
          git diff --exit-code --color=always
